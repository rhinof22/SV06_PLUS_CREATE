# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop #^PC0
position_min: -16
position_endstop: -14
position_max: 280
homing_speed: 70
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.60
stealthchop_threshold: 999999999
interpolate: False
sense_resistor: 0.150
driver_SGTHRS: 83 # NOTE Bump sensitivity; increase to make more sensitive
diag_pin: PC0 # PA5

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
#microsteps: 16
#rotation_distance: 40
#endstop_pin: ^PC1
position_endstop: 5
position_min: 0
#position_max: 235
#homing_speed: 50
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_max: 312 # NOTE You can adjust this if you have more room
homing_speed: 50
homing_retract_dist: 0


[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
#run_current: 0.580
stealthchop_threshold: 9999999999
#uart_pin: PC0
run_current: 0.60
interpolate: False
sense_resistor: 0.150
#uart_address: 3
driver_SGTHRS: 120 # NOTE Bump sensitivity; increase to make more sensitive
diag_pin: PC1


[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
#microsteps: 16
#rotation_distance: 8
#endstop_pin: ^PC2
#position_endstop: 0.0
#position_max: 250
microsteps: 64
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: -4
position_max: 340 # NOTE You can adjust this if you have more room
homing_speed: 5


[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
run_current: 0.600
stealthchop_threshold: 0
interpolate: False
sense_resistor: 0.150
uart_address: 1
#run_current: 0.580
#stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
#rotation_distance: 33.500
rotation_distance: 8.04
#nozzle_diameter: 0.800
#nozzle_diameter: 0.600
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 310

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

[fan]
pin: PC6

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_08003F001450415833323520-if00


[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 3300
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#####################################################################
#   Probe Related
#####################################################################

[probe]
pin: PC14
x_offset: 63
y_offset: 11
z_offset: 2.32 #2.855  
samples: 2
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 5

[safe_z_home]
home_xy_position: 10, 15 #123,70
speed: 100.0
z_hop: 10
z_hop_speed: 15

[bed_mesh]
speed: 175
mesh_min: 64, 25
mesh_max: 290, 290
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
#mesh_min:
#   Defines the minimum X, Y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
#mesh_max:
#   Defines the maximum X, Y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.





